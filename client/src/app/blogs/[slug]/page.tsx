"use client";

import React, { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import {
  ArrowLeft,
  Calendar,
  User,
  Clock,
  Facebook,
  Twitter,
  Link2,
  BookOpen,
  MessageCircle,
  Heart,
} from "lucide-react";
import { useParams, useRouter } from "next/navigation";
import { mockData } from "@/utils/services/mockData";
import Link from "next/link";
import Image from "next/image";

export default function BlogDetailPage() {
  const params = useParams();
  const router = useRouter();
  const [blog, setBlog] = useState<IBlog | null>(null);
  const [relatedPosts, setRelatedPosts] = useState<IBlog[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [likes, setLikes] = useState(42);
  const [isLiked, setIsLiked] = useState(false);

  useEffect(() => {
    const slug = params.slug as string;
    const foundPost = mockData.blogs.find((p) => p.slug === slug);

    if (foundPost) {
      setBlog(foundPost);
      // Get related posts from same category
      const related = mockData.blogs
        .filter(
          (p) => p.category === foundPost.category && p.id !== foundPost.id
        )
        .slice(0, 3);
      setRelatedPosts(related);
    }

    setIsLoading(false);
  }, [params.slug]);

  const handleLike = () => {
    setIsLiked(!isLiked);
    setLikes((prev) => (isLiked ? prev - 1 : prev + 1));
  };

  const handleShare = (platform: string) => {
    const url = window.location.href;
    const title = blog?.title || "";

    switch (platform) {
      case "facebook":
        window.open(
          `https://www.facebook.com/sharer/sharer.php?u=${url}`,
          "_blank"
        );
        break;
      case "twitter":
        window.open(
          `https://twitter.com/intent/tweet?url=${url}&text=${title}`,
          "_blank"
        );
        break;
      case "copy":
        navigator.clipboard.writeText(url);
        alert("Link ƒë√£ ƒë∆∞·ª£c sao ch√©p!");
        break;
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-primary"></div>
      </div>
    );
  }

  if (!blog) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">
            Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt
          </h1>
          <Link href="/blog">
            <Button>Quay l·∫°i blog</Button>
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <section className="bg-white border-b">
        <div className="container mx-auto px-4 py-6">
          <Button
            variant="ghost"
            onClick={() => router.back()}
            className="mb-4"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            Quay l·∫°i
          </Button>
        </div>
      </section>

      <div className="container mx-auto px-4 py-12">
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
          {/* Main Content */}
          <article className="lg:col-span-3">
            <Card>
              <div className="relative">
                <Image
                  src={blog.image}
                  alt={blog.title}
                  className="w-full h-64 md:h-96 object-cover rounded-t-lg"
                  width={400}
                  height={300}
                />
                <div className="absolute top-4 left-4 bg-primary text-white px-3 py-1 rounded-full text-sm font-medium">
                  {blog.category}
                </div>
              </div>

              <CardContent className="p-8">
                {/* Meta Info */}
                <div className="flex flex-wrap items-center gap-4 text-sm text-gray-500 mb-6">
                  <div className="flex items-center space-x-1">
                    <Calendar className="w-4 h-4" />
                    <span>
                      {new Date(blog.publishedAt).toLocaleDateString("vi-VN")}
                    </span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <User className="w-4 h-4" />
                    <span>{blog.author}</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <Clock className="w-4 h-4" />
                    <span>5 ph√∫t ƒë·ªçc</span>
                  </div>
                </div>

                {/* Title */}
                <h1 className="text-3xl lg:text-4xl font-bold text-gray-900 mb-6 leading-tight">
                  {blog.title}
                </h1>

                {/* Excerpt */}
                <div className="text-lg text-gray-600 mb-8 p-4 bg-gray-50 rounded-lg border-l-4 border-primary">
                  {blog.excerpt}
                </div>

                {/* Content */}
                <div className="prose prose-lg max-w-none">
                  <p className="text-gray-700 leading-relaxed mb-6">
                    Visa du h·ªçc l√† m·ªôt trong nh·ªØng b∆∞·ªõc quan tr·ªçng nh·∫•t trong
                    h√†nh tr√¨nh du h·ªçc c·ªßa b·∫°n. Vi·ªác chu·∫©n b·ªã h·ªì s∆° visa c·∫©n th·∫≠n
                    v√† ƒë·∫ßy ƒë·ªß s·∫Ω quy·∫øt ƒë·ªãnh ph·∫ßn l·ªõn ƒë·∫øn kh·∫£ nƒÉng th√†nh c√¥ng c·ªßa
                    b·∫°n trong vi·ªác ƒë∆∞·ª£c c·∫•p visa.
                  </p>

                  <h2 className="text-2xl font-bold text-gray-900 mb-4 mt-8">
                    1. Chu·∫©n b·ªã h·ªì s∆° visa du h·ªçc H√†n Qu·ªëc
                  </h2>

                  <p className="text-gray-700 leading-relaxed mb-6">
                    H·ªì s∆° visa du h·ªçc H√†n Qu·ªëc bao g·ªìm nhi·ªÅu lo·∫°i gi·∫•y t·ªù quan
                    tr·ªçng. M·ªói lo·∫°i gi·∫•y t·ªù ƒë·ªÅu c√≥ vai tr√≤ ri√™ng trong vi·ªác
                    ch·ª©ng minh nƒÉng l·ª±c h·ªçc t·∫≠p v√† t√†i ch√≠nh c·ªßa b·∫°n.
                  </p>

                  <h3 className="text-xl font-semibold text-gray-900 mb-3">
                    Gi·∫•y t·ªù h·ªçc v·∫•n
                  </h3>

                  <ul className="list-disc list-inside text-gray-700 mb-6 space-y-2">
                    <li>
                      B·∫±ng t·ªët nghi·ªáp v√† b·∫£ng ƒëi·ªÉm ƒë√£ ƒë∆∞·ª£c c√¥ng ch·ª©ng, h·ª£p ph√°p
                      h√≥a l√£nh s·ª±
                    </li>
                    <li>
                      Ch·ª©ng ch·ªâ ti·∫øng H√†n (TOPIK) ho·∫∑c ti·∫øng Anh (IELTS/TOEFL)
                    </li>
                    <li>Th∆∞ gi·ªõi thi·ªáu t·ª´ gi√°o vi√™n ho·∫∑c c∆° quan c√¥ng t√°c</li>
                    <li>K·∫ø ho·∫°ch h·ªçc t·∫≠p (Study Plan) ƒë∆∞·ª£c vi·∫øt chi ti·∫øt</li>
                  </ul>

                  <h3 className="text-xl font-semibold text-gray-900 mb-3">
                    Ch·ª©ng minh t√†i ch√≠nh
                  </h3>

                  <p className="text-gray-700 leading-relaxed mb-6">
                    ƒê√¢y l√† ph·∫ßn quan tr·ªçng nh·∫•t trong h·ªì s∆° visa. B·∫°n c·∫ßn ch·ª©ng
                    minh kh·∫£ nƒÉng chi tr·∫£ cho vi·ªác h·ªçc t·∫≠p v√† sinh ho·∫°t t·∫°i H√†n
                    Qu·ªëc trong su·ªët th·ªùi gian du h·ªçc.
                  </p>

                  <h2 className="text-2xl font-bold text-gray-900 mb-4 mt-8">
                    2. Quy tr√¨nh n·ªôp h·ªì s∆° v√† ph·ªèng v·∫•n
                  </h2>

                  <p className="text-gray-700 leading-relaxed mb-6">
                    Sau khi chu·∫©n b·ªã ƒë·∫ßy ƒë·ªß h·ªì s∆°, b·∫°n s·∫Ω ti·∫øn h√†nh n·ªôp h·ªì s∆°
                    t·∫°i L√£nh s·ª± qu√°n H√†n Qu·ªëc. Qu√° tr√¨nh n√†y th∆∞·ªùng m·∫•t t·ª´ 7-10
                    ng√†y l√†m vi·ªác ƒë·ªÉ c√≥ k·∫øt qu·∫£.
                  </p>

                  <div className="bg-primary/10 p-6 rounded-lg mb-6">
                    <h4 className="font-semibold text-primary mb-2">
                      üí° M·∫πo t·ª´ chuy√™n gia:
                    </h4>
                    <p className="text-gray-700">
                      N√™n chu·∫©n b·ªã h·ªì s∆° tr∆∞·ªõc √≠t nh·∫•t 3 th√°ng so v·ªõi th·ªùi ƒëi·ªÉm
                      d·ª± ki·∫øn nh·∫≠p h·ªçc. ƒêi·ªÅu n√†y gi√∫p b·∫°n c√≥ ƒë·ªß th·ªùi gian ƒë·ªÉ b·ªï
                      sung c√°c gi·∫•y t·ªù c√≤n thi·∫øu n·∫øu c·∫ßn.
                    </p>
                  </div>
                </div>

                {/* Social Actions */}
                <div className="flex items-center justify-between pt-8 border-t border-gray-200 mt-8">
                  <div className="flex items-center space-x-4">
                    <button
                      onClick={handleLike}
                      className={`flex items-center space-x-1 px-3 py-2 rounded-full transition-colors ${
                        isLiked
                          ? "bg-red-50 text-red-600"
                          : "bg-gray-100 text-gray-600 hover:bg-gray-200"
                      }`}
                    >
                      <Heart
                        className={`w-4 h-4 ${isLiked ? "fill-current" : ""}`}
                      />
                      <span>{likes}</span>
                    </button>

                    <div className="flex items-center space-x-1 text-gray-600">
                      <MessageCircle className="w-4 h-4" />
                      <span>24 b√¨nh lu·∫≠n</span>
                    </div>
                  </div>

                  <div className="flex items-center space-x-2">
                    <span className="text-sm text-gray-600 mr-2">Chia s·∫ª:</span>
                    <button
                      onClick={() => handleShare("facebook")}
                      className="p-2 bg-blue-50 text-blue-600 rounded-full hover:bg-blue-100"
                    >
                      <Facebook className="w-4 h-4" />
                    </button>
                    <button
                      onClick={() => handleShare("twitter")}
                      className="p-2 bg-sky-50 text-sky-600 rounded-full hover:bg-sky-100"
                    >
                      <Twitter className="w-4 h-4" />
                    </button>
                    <button
                      onClick={() => handleShare("copy")}
                      className="p-2 bg-gray-50 text-gray-600 rounded-full hover:bg-gray-100"
                    >
                      <Link2 className="w-4 h-4" />
                    </button>
                  </div>
                </div>
              </CardContent>
            </Card>
          </article>

          {/* Sidebar */}
          <aside className="space-y-6">
            {/* Author Card */}
            <Card>
              <CardHeader>
                <CardTitle>T√°c gi·∫£</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="flex items-center space-x-3 mb-3">
                  <Image
                    src="/api/placeholder/60/60"
                    alt={blog.author}
                    className="w-12 h-12 rounded-full object-cover"
                    width={60}
                    height={60}
                  />
                  <div>
                    <h4 className="font-semibold text-gray-900">
                      {blog.author}
                    </h4>
                    <p className="text-sm text-gray-600">
                      Chuy√™n gia t∆∞ v·∫•n du h·ªçc
                    </p>
                  </div>
                </div>
                <p className="text-sm text-gray-600 mb-4">
                  V·ªõi h∆°n 8 nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c t∆∞ v·∫•n du h·ªçc, t√¥i ƒë√£
                  h·ªó tr·ª£ h√†ng trƒÉm sinh vi√™n th·ª±c hi·ªán ∆∞·ªõc m∆° du h·ªçc.
                </p>
                <Button variant="outline" size="sm" className="w-full">
                  Xem th√™m b√†i vi·∫øt
                </Button>
              </CardContent>
            </Card>

            {/* Related Posts */}
            {relatedPosts.length > 0 && (
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center">
                    <BookOpen className="w-5 h-5 mr-2" />
                    B√†i vi·∫øt li√™n quan
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {relatedPosts.map((relatedPost) => (
                      <Link
                        key={relatedPost.id}
                        href={`/blog/${relatedPost.slug}`}
                      >
                        <div className="flex space-x-3 p-3 rounded-lg hover:bg-gray-50 transition-colors">
                          <Image
                            src={relatedPost.image}
                            alt={relatedPost.title}
                            width={64}
                            height={64}
                            className="w-16 h-16 object-cover rounded-lg"
                          />
                          <div>
                            <h5 className="font-medium text-gray-900 text-sm leading-tight mb-1 line-clamp-2">
                              {relatedPost.title}
                            </h5>
                            <p className="text-xs text-gray-500">
                              {new Date(
                                relatedPost.publishedAt
                              ).toLocaleDateString("vi-VN")}
                            </p>
                          </div>
                        </div>
                      </Link>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {/* Newsletter */}
            <Card>
              <CardHeader>
                <CardTitle>ƒêƒÉng k√Ω nh·∫≠n tin</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-gray-600 mb-4">
                  Nh·∫≠n th√¥ng tin m·ªõi nh·∫•t v·ªÅ du h·ªçc v√† h·ªçc b·ªïng
                </p>
                <div className="space-y-3">
                  <input
                    type="email"
                    placeholder="Email c·ªßa b·∫°n"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary/50"
                  />
                  <Button className="w-full">ƒêƒÉng k√Ω</Button>
                </div>
              </CardContent>
            </Card>
          </aside>
        </div>
      </div>
    </div>
  );
}
